package main

import (
	"fmt"
	"math"
)

type Point struct {
	X float64
	Y float64
}

type Path []Point

func (p Point) Distance(q Point) float64 {
	return math.Hypot(q.X-p.X, q.Y-p.Y)
}

func (path Path) Distance() float64 {
	var dist float64
	for p1 := range path {
		if p1 > 0 {
			dist += path[p1-1].Distance(path[p1])
		}

	}

	return dist
}

func main() {
	perim := Path{
		{1, 1},
		{5, 1},
		{5, 4},
		{1, 2},
	}

	distance := perim.Distance()
	fmt.Println(distance)
}
