package main

import (
	"fmt"
)

var prereqs = map[string][]string{
	"algorithms": {"data structures"},
	"calculus":   {"linear algebra"},
	"compilers": {
		"data structures",
		"formal languages",
		"computer organization",
	},
	"data structures":       {"discrete math"},
	"databases":             {"data structures"},
	"discrete math":         {"intro to programming"},
	"formal languages":      {"discrete math"},
	"networks":              {"operating systems"},
	"operating systems":     {"data structures", "computer organization"},
	"programming languages": {"data structures", "computer organization"},
}

func main() {
	for i, v := range topoSort(prereqs, "algorithms") {
		fmt.Println(i, v)
	}
}

func topoSort(m map[string][]string, s string) []string {
	var order []string
	var seen = map[string]bool{}
	var visitAll func(items map[string]bool)

	visitAll = func(items map[string]bool) {
		var deps []string
		for item, _ := range items {
			if !seen[item] {
				seen[item] = true
				deps = append(deps, visitAll())
				visitAll(m[item])
				order = append(order, item)
			}
		}
	}
	var keys = make(map[string]bool)
	for key := range m {
		keys[key] = true
	}
	visitAll(keys)
	return order
}
